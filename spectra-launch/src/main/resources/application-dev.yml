# 自己项目的配置
spectra:
  user:
    default-password: ENC(xhyePaPkX7s1niOK06ACFUMbg9GRXVELQ26LfOXId14jAJBXvUG1BPPe76fB5hRo)
  file:
    base-dir: spectra-files
    upload-dir: uploads
    upload:
      allowed-types:
        - jpeg
        - png
        - pdf
      strategies:
        - com.yangxj96.spectra.common.strategy.impl.TikaValidationStrategy
        - com.yangxj96.spectra.common.strategy.impl.MimeValidationStrategy
        - com.yangxj96.spectra.common.strategy.impl.ExtensionValidationStrategy
        - com.yangxj96.spectra.common.strategy.impl.MagicNumberValidationStrategy
  kaptcha:
    type: math

# 服务器配置
server:
  port: 8888
  servlet:
    context-path: /api
# spring 配置
spring:
  threads:
    virtual:
      enabled: true
  main:
    banner-mode: off
  application:
    name: spectra-framework-launch
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/spectra_framework_db
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: root
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 初始化连接池大小
      initial-size: 5
      # 最小连接池数量
      min-idle: 5
      # 最大连接池数量
      max-active: 20
      # 连接时最大等待时间（单位：毫秒）
      max-wait: 60000
      test-while-idle: true
      # 配置多久进行一次检测，检测需要关闭的连接（单位：毫秒）
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在连接池中最小生存的时间（单位：毫秒）
      min-evictable-idle-time-millis: 300000
      # 配置一个连接在连接池中最大生存的时间（单位：毫秒）
      max-evictable-idle-time-millis: 900000
      # 配置测试连接是否可用的查询 sql
      validation-query: SELECT 1
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: false
      web-stat-filter:
        enabled: true
      stat-view-servlet:
        enabled: true
        # 配置监控后台访问路径
        url-pattern: /druid/*
        # 配置监控后台登录的用户名、密码
        #login-username: admin
        #login-password: admin
      filter:
        # 统计
        stat:
          enabled: true
          # 开启慢 sql 记录
          log-slow-sql: true
          # 若执行耗时大于 2s，则视为慢 sql
          slow-sql-millis: 2000
          merge-sql: true
        # 防火墙
        wall:
          config:
            multi-statement-allow: true
  data:
    redis:
      host: 127.0.0.1
      port: 6379
      database: 0
      password:
      timeout: 10s
  cache:
    type: redis
# mybatis plus配置
mybatis-plus:
  mapper-locations: classpath*:/mapper/**/*.xml
  type-aliases-package: com.yangxj96.spectra.**.entity.dto
  configuration:
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl
    local-cache-scope: statement
  global-config:
    banner: false
    db-config:
      id-type: assign_id
      logic-delete-field: deleted
      logic-not-delete-value: "null"
      logic-delete-value: "now()"
# 日志配置
logging:
  level:
    spectra: debug
    root: info
  group:
    spectra: com.yangxj96.spectra
# Sa-Token 配置
sa-token:
  token-name: Authorization
  token-prefix: Bearer
  active-timeout: 3000
  is-concurrent: false
  is-share: false
  token-style: uuid
  is-log: true
  is-print: false
# 健康检查
management:
  health:
    # windows下安装的redis非官方版本,存在一定问题,所以关闭检查
    redis:
      enabled: false
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
